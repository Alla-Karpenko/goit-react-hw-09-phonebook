{"version":3,"sources":["redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/contact/contact-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-actions.js","redux/contact/contact-reducer.js","redux/store.js","components/Navigation.js","components/UserMenu/girl-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav.js","components/AppBar.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js"],"names":["axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","authActions","registerRequest","post","response","data","registerSuccess","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","getIsAuthenticated","state","isAuthenticated","getUsername","user","name","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactsError","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","changeFilter","initialUserState","email","createReducer","_","payload","setError","error","combineReducers","items","filter","id","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","contactReducer","persistor","persistStore","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggedIn","useSelector","authSelectors","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","UserMenu","useDispatch","onLogout","useCallback","authOperations","src","girlAvatar","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","AppBar","connect","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsEditor","App","useEffect","fallback","path","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.d6e7a0e6.chunk.js","sourcesContent":["import axios from \"axios\";\nimport authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = credentials => async dispatch => {\n    dispatch(authActions.registerRequest());\n\n    try {\n      const response = await axios.post(\"/users/signup\", credentials);\n        \n      token.set(response.data.token);\n      dispatch(authActions.registerSuccess(response.data));\n    } catch (error) {\n      dispatch(authActions.registerError(error.message));\n    }\n}\n\nconst logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\n\nexport default { register, logIn, logOut, getCurrentUser };","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nexport default {\n  getIsAuthenticated,\n  getUsername,\n};","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\n\nexport const addContactsRequest = createAction('contacts/addContactsRequest');\nexport const addContactsSuccess = createAction('contacts/addContactsSuccess');\nexport const addContactsError = createAction('contacts/addContactsError');\n\nexport const deleteContactsRequest = createAction(\"contacts/deleteContactsRequest\");\nexport const deleteContactsSuccess = createAction(\"contacts/deleteContactsSuccess\");\nexport const deleteContactsError = createAction(\"contacts/deleteContactsError\");\n\nexport const changeFilter = createAction('contacts/changeFilter');\n\n\n\n\n\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};","import { createReducer} from \"@reduxjs/toolkit\";\nimport { combineReducers } from \"redux\";\nimport {\n  addContactsSuccess,\n  deleteContactsSuccess,\n  fetchContactsSuccess,\n  changeFilter,\n} from \"./contact-actions\";\n\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('',{\n    [changeFilter]: (_, { payload }) => payload,\n}) \n\nexport default combineReducers({\n    items,\n    filter,\n}) \n\n\n\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport contactReducer from \"./contact/contact-reducer\";\n// import logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport authReducer from './auth/auth-reducer';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // logger,\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n}\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactReducer,\n  },\n  middleware,\n  // devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\n\n\nexport default { store, persistor };\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { NavLink } from \"react-router-dom\";\nimport { authSelectors } from \"../redux/auth\";\n\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nexport default function Navigation() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated)\n  \n  return (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Главная\n    </NavLink>\n    {isLoggedIn && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Phonebook\n      </NavLink>\n    )}\n    </nav>\n  )\n};\n\n","export default __webpack_public_path__ + \"static/media/girl-avatar.6e96ceb4.png\";","import React, { useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { authSelectors, authOperations } from \"../../redux/auth\";\nimport girlAvatar from './girl-avatar.png';\n\n\nconst styles = {\n  container: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const onLogout = useCallback(() => dispatch(authOperations.logOut()), [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <img src={girlAvatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>Welcome, {name}</span>\n      <button type=\"button\" onClick={onLogout}>\n        Logout\n      </button>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Регистрация\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Логин\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Navigation from \"./Navigation\";\nimport UserMenu from \"./UserMenu/UserMenu\";\nimport AuthNav from \"./AuthNav\";\nimport { authSelectors } from \"../redux/auth\";\n\nconst styles = {\n  header: {\n    display: \"flex\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    borderBottom: \"1px solid #2A363B\",\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsAuthenticated);\n  \n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n\n// const mapStateToProps = (state) => ({\n//   isAuthenticated: authSelectors.getIsAuthenticated(state),\n// });\n\n\n// export default connect(mapStateToProps)(AppBar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { useEffect, Suspense, lazy } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport AppBar from \"./components/AppBar\";\nimport { authOperations } from \"./redux/auth\";\nimport { useDispatch } from \"react-redux\";\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from \"./components/PublicRoute\";\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsEditor = lazy(() => import('../src/components/contactsEditor/contactsEditor'));\n\nexport default function App() {\n \n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(authOperations.getCurrentUser());\n  }, [dispatch]);\n  \n    return (\n      <>\n        <AppBar />\n\n        <Suspense fallback={<p>Загружаем...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              exact\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              exact\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={ContactsEditor}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n      </>\n    );\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport \"modern-normalize/modern-normalize.css\";\nimport App from './App';\nimport { PersistGate } from 'redux-persist/integration/react';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}